
import streamlit as st
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# T√≠tulo e descri√ß√£o
st.title("Gerador de Or√ßamentos com Curadoria Multicategoria (Top 3 Resultados)")
st.markdown("Descreva o ambiente ou estilo desejado e selecione m√∫ltiplas categorias. O sistema retornar√° os produtos mais compat√≠veis com base nas descri√ß√µes visuais.")

# Carregar o cat√°logo aprimorado
catalogo = pd.read_excel("catalogo_detalhado_aprimorado.xlsx")

# Upload da imagem (opcional)
imagem_cliente = st.file_uploader("üì∏ Envie uma imagem de refer√™ncia do ambiente (opcional)", type=["jpg", "jpeg", "png"])

# Entrada do usu√°rio
descricao_cliente = st.text_area("üìù Descreva o ambiente, estilo ou o que o cliente busca:")

# Sele√ß√£o de m√∫ltiplas categorias
categorias = st.multiselect("üìÇ Selecione as categorias desejadas:", catalogo['Categoria'].unique())
gerar = st.button("Gerar or√ßamento")

# L√≥gica de curadoria com m√∫ltiplas categorias e retorno dos top 3 produtos
if gerar and descricao_cliente and categorias:
    st.subheader("üõãÔ∏è Produtos Sugeridos (Top 3 mais compat√≠veis)")
    
    produtos_selecionados = catalogo[catalogo['Categoria'].isin(categorias)].reset_index(drop=True)
    corpus = [descricao_cliente] + produtos_selecionados['Descri√ß√£o Visual'].tolist()
    tfidf = TfidfVectorizer().fit_transform(corpus)
    similarity = cosine_similarity(tfidf[0:1], tfidf[1:]).flatten()

    # Obter os √≠ndices dos top 3 produtos mais similares
    top_indices = similarity.argsort()[-3:][::-1]

    for idx in top_indices:
        produto = produtos_selecionados.iloc[idx]
        st.image(produto['Imagem'], width=300)
        st.markdown(f"**Nome:** {produto['Nome']}")
        st.markdown(f"**Categoria:** {produto['Categoria']}")
        st.markdown(f"**Descri√ß√£o T√©cnica:** {produto['Descri√ß√£o T√©cnica']}")
        st.markdown(f"**Descri√ß√£o Visual:** {produto['Descri√ß√£o Visual']}")
        st.markdown(f"**Pre√ßo:** R$ {produto['Pre√ßo (R$)']:.2f}")
        st.markdown(f"**Fornecedor:** {produto['Fornecedor']}")
        st.markdown("---")

    st.success("‚úÖ Or√ßamento com m√∫ltiplos produtos sugeridos com base na sua descri√ß√£o.")

    if imagem_cliente:
        st.markdown("üîç **Imagem enviada como refer√™ncia:**")
        st.image(imagem_cliente, width=250)

# Rodap√©
st.markdown("---")
st.caption("Prot√≥tipo por Rafael Ferrer ‚Äì Curadoria IA Multicategoria para Vendas Consultivas")
